---
// Import the necessary CSS for AG Grid
import 'ag-grid-community/styles/ag-grid.css';
import 'ag-grid-community/styles/ag-theme-quartz.css';
---
<style>
  .ag-theme-quartz {
    font-family: monospace;
  }
</style>

<form id="benchmarks" class="text-sm">
  <label for="regionSelector" class="text-xl font-bold" >Select a Region</label>
  <div id="regionSelector" class="my-4">
    <input type="radio" id="seaRegionSelector" name="selectedRegion" value="sea" checked />
    <label for="seaRegionSelector">US West (Seattle)</label>
    <input type="radio" id="iadRegionSelector" name="selectedRegion" value="iad" />
    <label for="iadRegionSelector">US East (Virginia)</label>
    <input type="radio" id="cdgRegionSelector" name="selectedRegion" value="cdg" />
    <label for="cdgRegionSelector">Europe (Paris)</label>
  </div>
  <br />
  <div id="myGrid" class="ag-theme-quartz text-sm bg-stone-100 font-mono text-gray-950 dark:bg-stone-900 dark:text-white " style="width: 1000px;"></div>
  <div id="lastUpdated" class="text-base font-mono italic text-right"></div>
</form>

<script>
  import { createGrid } from 'ag-grid-community';
  import { BenchmarkRegions, gridOptions, LatestDataUrl } from '@/utils/DataGridDefinitions.ts';
  import { fetchLatestJsonFile } from '@/utils/FetchData.ts';

  let gridApi;
  const gridData = await fetchLatestJsonFile(LatestDataUrl);

  function setGridData(region, gridData) {
    gridData.forEach((regionData) => {
      if (regionData.region === region) {
        gridApi.setGridOption("rowData", regionData.results);
      }
    });
  } 

  function onDOMContentLoaded() {
    // setup the grid after the page has finished loading
    var gridDiv = document.querySelector("#myGrid");
    gridApi = createGrid(gridDiv, gridOptions);
    setGridData('sea', gridData);   // default to sea region on load
    document.getElementById('lastUpdated').innerText = `Last Updated: ${gridData[0].time.split('T')[0]}`;

    // Add an event listener to the radio buttons to filter the grid data
    document.getElementById('benchmarks').addEventListener('change', function(event) {
      // Filter the grid data based on the selected region
      if (event.target.name === 'selectedRegion') {
        setGridData(event.target.value, gridData);
      }
    });
  }

  if (document.readyState === "loading") {
      // The document is still loading, add the event listener normally
      document.addEventListener("DOMContentLoaded", onDOMContentLoaded);
  } else {
      // The DOMContentLoaded event has already fired, call the function directly
      onDOMContentLoaded();
  }

</script>



